# 1. Python Program to Find Fibonacci Numbers using Recursion

def fibonacci_recursive(n):
    if n <= 1:
        return n
    return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)

n = int(input("Enter the number of Fibonacci terms: "))
print("Fibonacci series:")
for i in range(n):
    print(fibonacci_recursive(i), end=" ")

# 2. Python Program to Find the Fibonacci Series Without using Recursion

def fibonacci_iterative(n):
    fib_series = [0, 1]
    for i in range(2, n):
        next_fib = fib_series[-1] + fib_series[-2]
        fib_series.append(next_fib)
    return fib_series

n = int(input("Enter the number of Fibonacci terms: "))
fib_series = fibonacci_iterative(n)
print("Fibonacci series:", fib_series)

# 3. Python Program to Find the Factorial of a Number using Recursion

def factorial_recursive(n):
    if n == 0 or n == 1:
        return 1
    return n * factorial_recursive(n - 1)

number = int(input("Enter a number: "))
print(f"Factorial of {number} is {factorial_recursive(number)}")

# 4. Python Program to Find the Factorial of a Number Without Recursion

def factorial_iterative(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

number = int(input("Enter a number: "))
print(f"Factorial of {number} is {factorial_iterative(number)}")
